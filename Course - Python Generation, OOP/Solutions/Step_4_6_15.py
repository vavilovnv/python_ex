# Условие задачи https://stepik.org/lesson/801862/step/15

"""
Класс QuadraticPolynomial

Квадратный трехчлен – это многочлен вида ax^2 + bx + c, где a ≠ 0
Значение переменной x, при котором квадратный трехчлен обращается в ноль,
называют его корнем. Квадратный трехчлен может иметь один корень, два корня
или вовсе не иметь корней. Корни квадратного трехчлена, если они существуют,
находятся по формуле: x = (−b ± sqrt(b^2 − 4ac)) / 2a

Реализуйте класс QuadraticPolynomial, описывающий квадратный трехчлен. При
создании экземпляра класс должен принимать три аргумента в следующем порядке:
a — коэффициент a квадратного трехчлена
b — коэффициент b квадратного трехчлена
c — коэффициент c квадратного трехчлена

Экземпляр класса QuadraticPolynomial должен иметь три атрибута:
a — коэффициент a квадратного трехчлена
b — коэффициент b квадратного трехчлена
c — коэффициент c квадратного трехчлена

Класс QuadraticPolynomial должен иметь четыре свойства:
- x1 — свойство, доступное только для чтения, возвращающее корень квадратного
трехчлена, вычисленный по формуле: x1 = (−b - sqrt(b^2 − 4ac)) / 2a. Если
квадратный трехчлен не имеет корней (b^2 − 4ac < 0), значением свойства должно
быть значение None
- x2 — свойство, доступное только для чтения, возвращающее корень квадратного
трехчлена, вычисленный по формуле: x2 = (−b + sqrt(b^2 − 4ac)) / 2a. Если
квадратный трехчлен не имеет корней (b^2 − 4ac < 0), значением свойства должно
быть значение None
- view — свойство, доступное только для чтения, возвращающее строку вида:
ax^2 + bx + c, где a, b и с представляют коэффициенты квадратного трехчлена
- coefficients — свойство, доступное для чтения и записи, возвращающее кортеж
вида: (a, b, c), где a, b и с представляют коэффициенты квадратного трехчлена

Примечание 1. Если квадратный трехчлен имеет лишь один корень, значения
свойств x1 и x2 должны совпадать.

Примечание 2. При изменении коэффициентов квадратного трехчлена через
соответствующие атрибуты или свойство coefficients значения свойств x1, x2,
view и coefficients также должны изменяться.

Примечание 3. Если какие-либо коэффициенты квадратного трехчлена равны нулю,
они по-прежнему должны присутствовать в строке, возвращаемой свойством view,
дополнительно их убирать не нужно.

Примечание 4. Дополнительная проверка данных на корректность не требуется.
Гарантируется, что реализованный класс используется только с корректными
данными.

Примечание 5. Никаких ограничений касательно реализации класса
QuadraticPolynomial нет, она может быть произвольной.
"""

class QuadraticPolynomial:
    
    def __init__(self, a, b, c):
        self.a = a
        self.b = b
        self.c = c
        
    @property
    def x1(self):
        if self.b ** 2 - 4 * self.a * self.c < 0:
            return
        return (-self.b - (self.b ** 2 - 4 * self.a * self.c) ** 0.5) / (2 * self.a)
        
    @property
    def x2(self):
        if self.b ** 2 - 4 * self.a * self.c < 0:
            return
        return (-self.b + (self.b ** 2 - 4 * self.a * self.c) ** 0.5) / (2 * self.a)
    
    @property
    def view(self):
        return (
            f"{self.a}x^2 {'+' if self.b >= 0 else '-'} {abs(self.b)}x "
            f"{'+' if self.c >= 0 else '-'} {abs(self.c)}"
        )

    @property
    def coefficients(self):
        return (self.a, self.b, self.c)
    
    @coefficients.setter
    def coefficients(self, value):
        self.a, self.b, self.c = value

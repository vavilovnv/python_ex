# Условие задачи https://stepik.org/lesson/934146/step/19

"""
Контекстный менеджер safe_write

Реализуйте контекстный менеджер safe_write с помощью декоратора
@contextmanager, который принимает один аргумент:
- filename — имя файла

Контекстный менеджер должен позволять записывать информацию в файл с именем
filename. Причем если во время записи в файл было возбуждено какое-либо
исключение, контекстный менеджер должен поглотить его, отменить все
выполненные ранее записи в файл, если они были, вернуть файл в исходное
состояние и проинформировать о возбужденном исключении выводом следующего
текста: Во время записи в файл было возбуждено исключение <тип исключения>

Примечание 1. Наглядные примеры использования контекстного менеджера
safe_write продемонстрированы в тестовых данных.

Примечание 2. Дополнительная проверка данных на корректность не требуется.
Гарантируется, что реализованный контекстный менеджер используется только с
корректными данными.
"""

from contextlib import contextmanager

@contextmanager
def safe_write(path):
    file = open("temp.txt", mode='w', encoding='utf-8')
    try:
        yield file
        file.close()
        new_file = open(path, mode='w', encoding='utf-8')
        with open("temp.txt", mode='r', encoding='utf-8') as file:
            new_file.writelines(file.readlines())
        new_file.close()
    except Exception as error:
        file.close()
        print(
            f"Во время записи в файл было возбуждено "
            f"исключение {type(error).__name__}"
        )

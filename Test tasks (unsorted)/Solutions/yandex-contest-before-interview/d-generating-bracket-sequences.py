"""
D. Генерация скобочных последовательностей
Дано целое число n. Требуется вывести все правильные скобочные
последовательности длины 2 ⋅ n, упорядоченные лексикографически.

В задаче используются только круглые скобки.

Желательно получить решение, которое работает за время, пропорциональное
общему количеству правильных скобочных последовательностей в ответе, и при
этом использует объём памяти, пропорциональный n.

Формат ввода
Единственная строка входного файла содержит целое число n, 0 ≤ n ≤ 11

Формат вывода
Выходной файл содержит сгенерированные правильные скобочные
последовательности, упорядоченные лексикографически.

Пример 1
Ввод
2
Вывод
(())
()()

Пример 2
Ввод
3
Вывод
((()))
(()())
(())()
()(())
()()()
"""

def generate(n, res, open, closed):
    if len(res) == 2 * n:
        if open == closed:
            print(res)
        else:
            return
    if open < n:
        generate(n, res + '(', open + 1, closed)
    if closed < open:
        generate(n, res + ')', open, closed + 1)


if __name__ == '__main__':
	generate(int(input()), '', 0, 0)
